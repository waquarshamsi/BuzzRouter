server:
  port: 8025
spring:
  application:
    name: telegram-notifier
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: 5672
    username: ${SPRING_RABBITMQ_USERNAME:guest}
    password: ${SPRING_RABBITMQ_PASSWORD:guest}
  mail:
    host: ${MAIL_HOST:smtp.example.com}
    port: 587
    username: ${SPRING_MAIL_USERNAME:YOUR_SMTP_USERNAME}
    password: ${SPRING_MAIL_PASSWORD:YOUR_SMTP_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
app:
  rabbitmq:
    exchange: notifications.exchange
    queue: notifications.queue
    routing-key: notifications.routing-key
    dlx: notifications.dlx
    dlq: notifications.dlq
    dlq-routing-key: dead-letter
  mail:
    from: noreply@your-service.com
telegram:
  bot:
    token: ${TELEGRAM_BOT_TOKEN:YOUR_TELEGRAM_BOT_TOKEN}
twilio:
  account-sid: ${TWILIO_ACCOUNT_SID:ACxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
  auth-token: ${TWILIO_AUTH_TOKEN:YOUR_TWILIO_AUTH_TOKEN}
  from-number: +15005550006 # A valid Twilio phone number you own
feature-flags:
  sms:
    enabled: true # Set to false to disable SMS notifications
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always
info:
  app:
    description: ${project.description} # From pom.xml
    version: ${project.version}       # From pom.xml
  contact:
    email: dev-team@example.com
logstash:
  host: ${LOGSTASH_HOST:localhost}
  port: 5000
resilience4j:
  circuitbreaker:
    instances:
      email-service: &cb_defaults
        register-health-indicator: true
        sliding-window-type: count-based
        sliding-window-size: 10 # Analyzes the last 10 calls
        failure-rate-threshold: 50 # If 50% of calls fail, the circuit opens
        wait-duration-in-open-state: 20s # Stays open for 20s before trying again
        permitted-number-of-calls-in-half-open-state: 3 # Allows 3 test calls in half-open state
        automatic-transition-from-open-to-half-open-enabled: true
      sms-service:
        <<: *cb_defaults # Use YAML anchors to avoid repetition
      telegram-service:
        <<: *cb_defaults
features:
  notification:
    email:
      enabled: false
    sms:
      enabled: false
    telegram:
      enabled: true
logging:
  level:
    # Set to TRACE to see detailed method entry/exit logs from the LoggingAspect
    # Set to INFO or higher to disable them.
    com.waquarshamsi.api.telegram_notifer.aspect: TRACE


# The Logstash appender is now disabled by default. 
# To enable it, you need to activate the elk Spring profile. 
# You can do this by setting the spring.profiles.active property 
# to elk in your application.yml file or by setting an environment variable.
